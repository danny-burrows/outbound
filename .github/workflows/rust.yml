name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --check --verbose

  docker-build-outbound-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: docker/dev
          tags: outbound-dev:latest
          outputs: type=docker,dest=/tmp/outbound-dev.tar
      - uses: actions/upload-artifact@v4
        with:
          name: outbound-dev
          path: /tmp/outbound-dev.tar

  cargo-release-build:
    needs: docker-build-outbound-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: outbound-dev
          path: /tmp
      - run: |
          docker load --input /tmp/outbound-dev.tar
      - uses: actions/checkout@v4
      - run: |
          docker run --rm -v $(pwd):/code -w /code outbound-dev cargo build --release --verbose
      - uses: actions/upload-artifact@v4
        with:
          name: outbound-linux-amd64-ubuntu
          path: ~/target/release/outbound

  cargo-clippy:
    needs: docker-build-outbound-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: outbound-dev
          path: /tmp
      - run: |
          docker load --input /tmp/outbound-dev.tar
      - uses: actions/checkout@v4
      - run: |
          docker run --rm -v $(pwd):/code -w /code outbound-dev cargo clippy --all-targets --verbose

  cargo-test:
    needs: docker-build-outbound-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: outbound-dev
          path: /tmp
      - run: |
          docker load --input /tmp/outbound-dev.tar
      - uses: actions/checkout@v4
      - run: |
          docker run --rm -v $(pwd):/code -w /code outbound-dev cargo test --verbose
